import{_ as t,c as a,o as e,a3 as r}from"./chunks/framework.BVvB2hL-.js";const g=JSON.parse('{"title":"JavaScript函数式编程指南(Functional Programming)","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),o={name:"README.md"},i=r('<h1 id="javascript函数式编程指南-functional-programming" tabindex="-1">JavaScript函数式编程指南(Functional Programming) <a class="header-anchor" href="#javascript函数式编程指南-functional-programming" aria-label="Permalink to &quot;JavaScript函数式编程指南(Functional Programming)&quot;">​</a></h1><h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h2><p>📖 本仓库收集了GitHub开源库中<strong>最优秀</strong>、<strong>最精华</strong>的函数式编程文章，将其整合到<code>VitePress</code>文档方便浏览，并非本人编写，如有侵权请及时联系本仓库作者删除：</p><blockquote><p>联系方式：</p><p>QQ: 245270533</p></blockquote><hr><h2 id="关于函数式编程" tabindex="-1">关于函数式编程 <a class="header-anchor" href="#关于函数式编程" aria-label="Permalink to &quot;关于函数式编程&quot;">​</a></h2><p>函数式编程是一种编程范式，它将计算视为数学函数的评估，并避免使用程序状态以及易变对象。在JavaScript中，函数式编程不仅可以提高代码的可读性和可维护性，还可以帮助开发者编写更少的错误和更易于测试的代码。</p><p>无论您是初学者还是有经验的开发者，这个文档库都是探索和深化JavaScript函数式编程知识的理想场所。通过详细的指南、实例和最佳实践，您将能够有效地利用JavaScript的函数式编程特性，提升您的编程技能和项目质量。欢迎深入探索，开启您的函数式编程之旅！</p><h2 id="收集目录" tabindex="-1">收集目录 <a class="header-anchor" href="#收集目录" aria-label="Permalink to &quot;收集目录&quot;">​</a></h2><table><thead><tr><th>名称</th><th>地址</th></tr></thead><tbody><tr><td>mostly-adequate-guide-chinese</td><td><a href="https://github.com/llh911001/mostly-adequate-guide-chinese" target="_blank" rel="noreferrer">https://github.com/llh911001/mostly-adequate-guide-chinese</a></td></tr><tr><td>Ramda Documentation</td><td><a href="https://ramda.cn/" target="_blank" rel="noreferrer">https://ramda.cn/</a></td></tr><tr><td>wangzengdi&#39;s Blog</td><td><a href="https://adispring.github.io/" target="_blank" rel="noreferrer">https://adispring.github.io/</a></td></tr></tbody></table>',10),n=[i];function d(c,s,h,l,p,m){return e(),a("div",null,n)}const _=t(o,[["render",d]]);export{g as __pageData,_ as default};
